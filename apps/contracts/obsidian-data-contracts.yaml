openapi: 3.0.3
info:
  title: Obsidian RAG Data Contracts
  description: Data contracts and API specifications for Obsidian Knowledge Base RAG system
  version: 1.0.0
  contact:
    name: Obsidian RAG Team

servers:
  - url: http://localhost:3001/api/v1
    description: Development server

paths:
  /search:
    post:
      summary: Perform semantic search across Obsidian vault
      operationId: searchObsidian
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /search/{fileName}:
    get:
      summary: Get all chunks for a specific file
      operationId: getFileChunks
      parameters:
        - name: fileName
          in: path
          required: true
          schema:
            type: string
          description: Name of the Obsidian file
      responses:
        '200':
          description: File chunks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentChunk'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /stats:
    get:
      summary: Get vault statistics
      operationId: getVaultStats
      responses:
        '200':
          description: Vault statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultStats'
        '500':
          $ref: '#/components/responses/InternalError'

  /ingest:
    post:
      summary: Ingest Obsidian vault content
      operationId: ingestVault
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequest'
      responses:
        '200':
          description: Ingestion results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestResponse'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    # Request Schemas
    SearchRequest:
      type: object
      properties:
        query:
          type: string
          minLength: 1
          maxLength: 500
          description: Search query
        limit:
          type: integer
          minimum: 1
          maximum: 50
          default: 20
        minSimilarity:
          type: number
          minimum: 0
          maximum: 1
          default: 0.0
        fileTypes:
          type: array
          items:
            type: string
            enum: [moc, article, conversation, book-note, template, note]
          description: Filter by content types
        tags:
          type: array
          items:
            type: string
          description: Filter by tags
        folders:
          type: array
          items:
            type: string
          description: Filter by folders
        hasWikilinks:
          type: boolean
          description: Filter files with/without wikilinks
        dateRange:
          type: object
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
          description: Filter by date range
        searchMode:
          type: string
          enum: [semantic, hybrid, graph, comprehensive]
          default: comprehensive
        includeRelated:
          type: boolean
          default: true
        maxRelated:
          type: integer
          minimum: 1
          maximum: 10
          default: 3
      required:
        - query

    IngestRequest:
      type: object
      properties:
        batchSize:
          type: integer
          minimum: 1
          maximum: 10
          default: 3
        rateLimitMs:
          type: integer
          minimum: 100
          maximum: 1000
          default: 300
        skipExisting:
          type: boolean
          default: true
        includePatterns:
          type: array
          items:
            type: string
          default: ["**/*.md"]
        excludePatterns:
          type: array
          items:
            type: string
          default: ["**/.obsidian/**", "**/node_modules/**", "**/.git/**", "**/Attachments/**", "**/assets/**"]
        chunkingOptions:
          $ref: '#/components/schemas/ChunkingOptions'
      description: Ingestion configuration options

    ChunkingOptions:
      type: object
      properties:
        maxChunkSize:
          type: integer
          minimum: 200
          maximum: 2000
          default: 800
        chunkOverlap:
          type: integer
          minimum: 0
          maximum: 200
          default: 100
        preserveStructure:
          type: boolean
          default: true
        includeContext:
          type: boolean
          default: true
        cleanContent:
          type: boolean
          default: true

    # Response Schemas
    SearchResponse:
      type: object
      properties:
        query:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/ObsidianSearchResult'
        totalFound:
          type: integer
          minimum: 0
        latencyMs:
          type: integer
          minimum: 0
        facets:
          $ref: '#/components/schemas/Facets'
        graphInsights:
          $ref: '#/components/schemas/GraphInsights'
      required:
        - query
        - results
        - totalFound
        - latencyMs

    IngestResponse:
      type: object
      properties:
        totalFiles:
          type: integer
          minimum: 0
        processedFiles:
          type: integer
          minimum: 0
        totalChunks:
          type: integer
          minimum: 0
        processedChunks:
          type: integer
          minimum: 0
        skippedChunks:
          type: integer
          minimum: 0
        errors:
          type: array
          items:
            type: string
      required:
        - totalFiles
        - processedFiles
        - totalChunks
        - processedChunks
        - skippedChunks
        - errors

    VaultStats:
      type: object
      properties:
        totalChunks:
          type: integer
          minimum: 0
        byContentType:
          type: object
          additionalProperties:
            type: integer
            minimum: 0
        byFolder:
          type: object
          additionalProperties:
            type: integer
            minimum: 0
        tagDistribution:
          type: object
          additionalProperties:
            type: integer
            minimum: 0
      required:
        - totalChunks
        - byContentType
        - byFolder
        - tagDistribution

    # Data Models
    DocumentChunk:
      type: object
      properties:
        id:
          type: string
          description: Unique chunk identifier
        text:
          type: string
          description: Chunk text content
        meta:
          $ref: '#/components/schemas/DocumentMetadata'
        embedding:
          type: array
          items:
            type: number
          description: Vector embedding (optional in responses)
      required:
        - id
        - text
        - meta

    DocumentMetadata:
      type: object
      properties:
        uri:
          type: string
          description: Unique resource identifier
        section:
          type: string
          description: Section or heading name
        breadcrumbs:
          type: array
          items:
            type: string
          description: Folder hierarchy
        contentType:
          type: string
          enum: [moc, article, conversation, book-note, template, note]
          description: Obsidian content type
        sourceType:
          type: string
          enum: [obsidian]
          description: Data source type
        sourceDocumentId:
          type: string
          description: Original file identifier
        lang:
          type: string
          default: en
          description: Language code
        acl:
          type: string
          default: public
          description: Access control level
        updatedAt:
          type: string
          format: date-time
          description: Last modification date
        createdAt:
          type: string
          format: date-time
          description: Creation date
        chunkIndex:
          type: integer
          minimum: 0
          description: Index within document
        chunkCount:
          type: integer
          minimum: 1
          description: Total chunks in document
        obsidianFile:
          $ref: '#/components/schemas/ObsidianFileMetadata'
      required:
        - uri
        - section
        - breadcrumbs
        - contentType
        - sourceType
        - sourceDocumentId
        - lang
        - acl
        - updatedAt

    ObsidianFileMetadata:
      type: object
      properties:
        fileName:
          type: string
          description: Filename without extension
        filePath:
          type: string
          description: Relative file path
        frontmatter:
          type: object
          additionalProperties: true
          description: YAML frontmatter as key-value pairs
        wikilinks:
          type: array
          items:
            type: string
          description: Outgoing wikilinks
        tags:
          type: array
          items:
            type: string
          description: Document tags
      required:
        - fileName
        - filePath

    ObsidianSearchResult:
      allOf:
        - $ref: '#/components/schemas/DocumentChunk'
        - type: object
          properties:
            cosineSimilarity:
              type: number
              minimum: 0
              maximum: 1
              description: Semantic similarity score
            rank:
              type: integer
              minimum: 1
              description: Result ranking position
            obsidianMeta:
              type: object
              properties:
                fileName:
                  type: string
                filePath:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                wikilinks:
                  type: array
                  items:
                    type: string
                frontmatter:
                  type: object
                  additionalProperties: true
                relatedFiles:
                  type: array
                  items:
                    type: string
                  description: Files linked to this result
                backlinks:
                  type: array
                  items:
                    type: string
                  description: Files linking to this result
            highlights:
              type: array
              items:
                type: string
              description: Text snippets with query matches
            relatedChunks:
              type: array
              items:
                $ref: '#/components/schemas/DocumentChunk'
              description: Related content chunks
            graphContext:
              type: object
              properties:
                connectedConcepts:
                  type: array
                  items:
                    type: string
                  description: Related concepts/tags
                pathsToQuery:
                  type: integer
                  minimum: 0
                  description: Number of concept connections
                centralityScore:
                  type: number
                  minimum: 0
                  maximum: 1
                  description: Graph centrality score
          required:
            - cosineSimilarity
            - rank

    Facets:
      type: object
      properties:
        fileTypes:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              count:
                type: integer
                minimum: 0
            required:
              - type
              - count
        tags:
          type: array
          items:
            type: object
            properties:
              tag:
                type: string
              count:
                type: integer
                minimum: 0
            required:
              - tag
              - count
        folders:
          type: array
          items:
            type: object
            properties:
              folder:
                type: string
              count:
                type: integer
                minimum: 0
            required:
              - folder
              - count
        dateDistribution:
          type: array
          items:
            type: object
            properties:
              period:
                type: string
                description: Date period (e.g., "2024")
              count:
                type: integer
                minimum: 0
            required:
              - period
              - count

    GraphInsights:
      type: object
      properties:
        queryConcepts:
          type: array
          items:
            type: string
          description: Concepts extracted from query
        relatedConcepts:
          type: array
          items:
            type: string
          description: Related concepts from knowledge graph
        knowledgeClusters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Cluster/concept name
              files:
                type: array
                items:
                  type: string
                description: Files in this cluster
              centrality:
                type: number
                minimum: 0
                maximum: 1
                description: Cluster centrality score
            required:
              - name
              - files
              - centrality
      required:
        - queryConcepts
        - relatedConcepts
        - knowledgeClusters

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                enum: [VALIDATION_ERROR, INVALID_QUERY, INVALID_PARAMETERS]
              message:
                type: string
              details:
                type: object
            required:
              - error
              - message

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                enum: [FILE_NOT_FOUND, RESOURCE_NOT_FOUND]
              message:
                type: string
            required:
              - error
              - message

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                enum: [INTERNAL_ERROR, DATABASE_ERROR, EMBEDDING_ERROR]
              message:
                type: string
            required:
              - error
              - message

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication (optional for local development)
