openapi: 3.0.3
info:
  title: Graph RAG-Enhanced Search API
  description: |
    API for hybrid semantic search combining vector similarity with knowledge graph traversal.
    Provides explainable, contextually rich search results across multi-modal content.
  version: 1.0.0
  contact:
    name: Graph RAG Search Team
    email: team@example.com

servers:
  - url: http://localhost:3000/api/v1
    description: Development server
  - url: https://api.example.com/v1
    description: Production server

paths:
  /search:
    post:
      summary: Perform hybrid graph RAG search
      description: |
        Execute a search query using hybrid vector similarity and knowledge graph traversal.
        Returns ranked results with explainable relationship provenance.
      operationId: searchWithGraphRAG
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
            examples:
              basic_search:
                summary: Basic search query
                value:
                  query: "artificial intelligence design patterns"
                  options:
                    maxResults: 10
                    includeExplanation: true
              multi_hop_search:
                summary: Multi-hop reasoning search
                value:
                  query: "neural network optimization techniques"
                  options:
                    maxResults: 20
                    maxHops: 3
                    minConfidence: 0.7
                    includeExplanation: true
                    contentTypes: ["pdf", "video", "audio"]
      responses:
        '200':
          description: Search completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Invalid search request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /search/{searchId}/explain:
    get:
      summary: Get detailed explanation for search result
      description: |
        Retrieve detailed explanation of how a specific search result was derived,
        including entity relationship chains and reasoning paths.
      operationId: explainSearchResult
      parameters:
        - name: searchId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier for the search session
        - name: resultId
          in: query
          required: true
          schema:
            type: string
          description: Identifier for the specific result to explain
      responses:
        '200':
          description: Explanation retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchExplanation'
        '404':
          description: Search or result not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /entities:
    get:
      summary: List entities in knowledge graph
      description: |
        Retrieve entities from the knowledge graph with optional filtering
        and pagination support.
      operationId: listEntities
      parameters:
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/EntityType'
          description: Filter by entity type
        - name: search
          in: query
          schema:
            type: string
          description: Search entities by name (fuzzy matching)
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Maximum number of entities to return
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Number of entities to skip
      responses:
        '200':
          description: Entities retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityListResponse'

  /entities/{entityId}:
    get:
      summary: Get entity details with relationships
      description: |
        Retrieve detailed information about a specific entity including
        its relationships and metadata.
      operationId: getEntity
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the entity
        - name: includeRelationships
          in: query
          schema:
            type: boolean
            default: true
          description: Whether to include entity relationships
        - name: maxRelationships
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          description: Maximum number of relationships to return
      responses:
        '200':
          description: Entity retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDetails'
        '404':
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /graph/stats:
    get:
      summary: Get knowledge graph statistics
      description: |
        Retrieve statistical information about the knowledge graph including
        entity counts, relationship distributions, and growth metrics.
      operationId: getGraphStats
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphStats'

components:
  schemas:
    SearchRequest:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          minLength: 1
          maxLength: 1000
          description: The search query text
          example: "artificial intelligence design patterns"
        options:
          $ref: '#/components/schemas/SearchOptions'

    SearchOptions:
      type: object
      properties:
        maxResults:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
          description: Maximum number of results to return
        maxHops:
          type: integer
          minimum: 1
          maximum: 3
          default: 2
          description: Maximum number of hops for graph traversal
        minConfidence:
          type: number
          minimum: 0.0
          maximum: 1.0
          default: 0.5
          description: Minimum confidence threshold for results
        includeExplanation:
          type: boolean
          default: false
          description: Whether to include explanation in results
        contentTypes:
          type: array
          items:
            $ref: '#/components/schemas/ContentType'
          description: Filter results by content types
        searchType:
          type: string
          enum: [vector, graph, hybrid]
          default: hybrid
          description: Type of search algorithm to use

    SearchResponse:
      type: object
      required:
        - searchId
        - results
        - metadata
      properties:
        searchId:
          type: string
          format: uuid
          description: Unique identifier for this search session
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          description: Array of search results
        metadata:
          $ref: '#/components/schemas/SearchMetadata'
        explanation:
          $ref: '#/components/schemas/SearchExplanation'

    SearchResult:
      type: object
      required:
        - id
        - text
        - score
        - metadata
      properties:
        id:
          type: string
          description: Unique identifier for this result
        text:
          type: string
          description: The text content of the result
        score:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Relevance score for this result
        metadata:
          $ref: '#/components/schemas/ResultMetadata'
        entities:
          type: array
          items:
            $ref: '#/components/schemas/EntityReference'
          description: Entities found in this result
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipReference'
          description: Relationships relevant to this result

    SearchMetadata:
      type: object
      required:
        - totalResults
        - searchTime
        - searchType
      properties:
        totalResults:
          type: integer
          minimum: 0
          description: Total number of results found
        searchTime:
          type: number
          minimum: 0
          description: Search execution time in milliseconds
        searchType:
          type: string
          enum: [vector, graph, hybrid]
          description: Type of search performed
        graphTraversal:
          $ref: '#/components/schemas/GraphTraversalMetadata'

    GraphTraversalMetadata:
      type: object
      properties:
        nodesVisited:
          type: integer
          minimum: 0
          description: Number of nodes visited during traversal
        edgesTraversed:
          type: integer
          minimum: 0
          description: Number of edges traversed
        maxHopsReached:
          type: integer
          minimum: 0
          description: Maximum hop depth reached
        traversalTime:
          type: number
          minimum: 0
          description: Graph traversal time in milliseconds

    SearchExplanation:
      type: object
      properties:
        queryEntities:
          type: array
          items:
            $ref: '#/components/schemas/EntityReference'
          description: Entities identified in the search query
        traversalPaths:
          type: array
          items:
            $ref: '#/components/schemas/TraversalPath'
          description: Paths taken during graph traversal
        reasoningSteps:
          type: array
          items:
            $ref: '#/components/schemas/ReasoningStep'
          description: Step-by-step reasoning process

    TraversalPath:
      type: object
      required:
        - entities
        - relationships
        - confidence
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/EntityReference'
          description: Entities in this traversal path
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipReference'
          description: Relationships connecting the entities
        confidence:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Confidence score for this path
        hopCount:
          type: integer
          minimum: 1
          description: Number of hops in this path

    ReasoningStep:
      type: object
      required:
        - step
        - description
        - confidence
      properties:
        step:
          type: integer
          minimum: 1
          description: Step number in the reasoning process
        description:
          type: string
          description: Human-readable description of this reasoning step
        confidence:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Confidence in this reasoning step
        evidence:
          type: array
          items:
            type: string
          description: Evidence supporting this reasoning step

    EntityReference:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: string
          description: Unique identifier for the entity
        name:
          type: string
          description: Display name of the entity
        type:
          $ref: '#/components/schemas/EntityType'
        confidence:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Confidence score for entity extraction

    RelationshipReference:
      type: object
      required:
        - id
        - sourceEntityId
        - targetEntityId
        - type
      properties:
        id:
          type: string
          description: Unique identifier for the relationship
        sourceEntityId:
          type: string
          description: ID of the source entity
        targetEntityId:
          type: string
          description: ID of the target entity
        type:
          $ref: '#/components/schemas/RelationshipType'
        confidence:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Confidence score for relationship inference
        strength:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Strength of the relationship

    EntityDetails:
      type: object
      required:
        - id
        - name
        - type
        - confidence
      properties:
        id:
          type: string
          description: Unique identifier for the entity
        name:
          type: string
          description: Canonical name of the entity
        type:
          $ref: '#/components/schemas/EntityType'
        aliases:
          type: array
          items:
            type: string
          description: Alternative names for this entity
        confidence:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Overall confidence score for this entity
        metadata:
          $ref: '#/components/schemas/EntityMetadata'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipDetails'
          description: Relationships involving this entity

    EntityMetadata:
      type: object
      properties:
        sourceFiles:
          type: array
          items:
            type: string
          description: Files where this entity was found
        extractionMethods:
          type: array
          items:
            type: string
          description: Methods used to extract this entity
        firstSeen:
          type: string
          format: date-time
          description: When this entity was first discovered
        lastUpdated:
          type: string
          format: date-time
          description: When this entity was last updated
        occurrenceCount:
          type: integer
          minimum: 1
          description: Number of times this entity was found

    RelationshipDetails:
      type: object
      required:
        - id
        - targetEntity
        - type
        - confidence
      properties:
        id:
          type: string
          description: Unique identifier for the relationship
        targetEntity:
          $ref: '#/components/schemas/EntityReference'
        type:
          $ref: '#/components/schemas/RelationshipType'
        confidence:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Confidence score for this relationship
        strength:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Strength of the relationship
        evidence:
          $ref: '#/components/schemas/RelationshipEvidence'

    RelationshipEvidence:
      type: object
      properties:
        sourceChunks:
          type: array
          items:
            type: string
          description: Text chunks supporting this relationship
        cooccurrenceCount:
          type: integer
          minimum: 1
          description: Number of times entities co-occurred
        extractionContext:
          type: string
          description: Context in which the relationship was extracted

    EntityListResponse:
      type: object
      required:
        - entities
        - pagination
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/EntityReference'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'

    PaginationInfo:
      type: object
      required:
        - total
        - limit
        - offset
      properties:
        total:
          type: integer
          minimum: 0
          description: Total number of entities available
        limit:
          type: integer
          minimum: 1
          description: Number of entities per page
        offset:
          type: integer
          minimum: 0
          description: Number of entities skipped
        hasNext:
          type: boolean
          description: Whether there are more entities available

    GraphStats:
      type: object
      required:
        - entityCount
        - relationshipCount
        - lastUpdated
      properties:
        entityCount:
          type: integer
          minimum: 0
          description: Total number of entities in the graph
        relationshipCount:
          type: integer
          minimum: 0
          description: Total number of relationships in the graph
        entityTypeDistribution:
          type: object
          additionalProperties:
            type: integer
          description: Count of entities by type
        relationshipTypeDistribution:
          type: object
          additionalProperties:
            type: integer
          description: Count of relationships by type
        averageConnectivity:
          type: number
          minimum: 0
          description: Average number of relationships per entity
        lastUpdated:
          type: string
          format: date-time
          description: When the graph was last updated

    ResultMetadata:
      type: object
      required:
        - contentType
        - sourceFile
      properties:
        contentType:
          $ref: '#/components/schemas/ContentType'
        sourceFile:
          type: string
          description: Original file containing this content
        chunkId:
          type: string
          description: Identifier for the content chunk
        extractionMethod:
          type: string
          description: Method used to extract this content
        processingTime:
          type: string
          format: date-time
          description: When this content was processed

    EntityType:
      type: string
      enum:
        - PERSON
        - ORGANIZATION
        - LOCATION
        - CONCEPT
        - TECHNOLOGY
        - PRODUCT
        - EVENT
        - DATE
        - MONEY
        - OTHER
      description: Type classification for entities

    RelationshipType:
      type: string
      enum:
        - WORKS_FOR
        - PART_OF
        - RELATED_TO
        - MENTIONS
        - LOCATED_IN
        - CREATED_BY
        - USED_BY
        - SIMILAR_TO
        - DEPENDS_ON
        - OTHER
      description: Type classification for relationships

    ContentType:
      type: string
      enum:
        - pdf
        - video
        - audio
        - image
        - markdown
        - html
        - csv
        - office_document
        - office_spreadsheet
        - office_presentation
      description: Type of content source

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: When the error occurred

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - ApiKeyAuth: []
  - BearerAuth: []

tags:
  - name: Search
    description: Hybrid graph RAG search operations
  - name: Entities
    description: Knowledge graph entity management
  - name: Graph
    description: Knowledge graph statistics and metadata
