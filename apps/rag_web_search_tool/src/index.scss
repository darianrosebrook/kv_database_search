@use "./designTokens.scss" as designTokens;

@layer base {
  *, :after, :before, ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  body {
    line-height: inherit;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
    color: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }

  ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }

  * {
    border-color: var(--semantic-color-border-primary);
    outline-color: var(--semantic-focus-ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--semantic-focus-ring) 50%, transparent);
    }
  }

  * {
    border-color: var(--semantic-color-border-primary);
    outline-color: var(--semantic-focus-ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--semantic-focus-ring) 50%, transparent);
    }
  }

  body {
    background-color: var(--semantic-color-background-primary);
    color: var(--semantic-color-foreground-primary);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
    font-size: var(--semantic-typography-heading-01);
    font-weight: var(--semantic-typography-font-weight-medium);
    line-height: var(--semantic-typography-line-height-heading);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
    font-size: var(--semantic-typography-heading-02);
    font-weight: var(--semantic-typography-font-weight-medium);
    line-height: var(--semantic-typography-line-height-heading);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
    font-size: var(--semantic-typography-heading-03);
    font-weight: var(--semantic-typography-font-weight-medium);
    line-height: var(--semantic-typography-line-height-heading);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
    font-size: var(--semantic-typography-heading-04);
    font-weight: var(--semantic-typography-font-weight-medium);
    line-height: var(--semantic-typography-line-height-heading);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p {
    font-size: var(--semantic-typography-body-02);
    font-weight: var(--semantic-typography-font-weight-regular);
    line-height: var(--semantic-typography-line-height-body);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
    font-size: var(--semantic-typography-body-02);
    font-weight: var(--semantic-typography-font-weight-medium);
    line-height: var(--semantic-typography-line-height-body);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input {
    font-size: var(--semantic-typography-body-02);
    font-weight: var(--semantic-typography-font-weight-regular);
    line-height: var(--semantic-typography-line-height-body);
  }
}

@layer utilities {
  .\@container\/card-header {
    container: card-header / inline-size;
  }

  .pointer-events-none {
    pointer-events: none;
  }

  .visible {
    visibility: visible;
  }

  .absolute {
    position: absolute;
  }

  .relative {
    position: relative;
  }

  .sticky {
    position: sticky;
  }

  .top-0 {
    top: calc(var(--core-spacing-size-04) * 0);
  }

  .top-1\/2 {
    top: 50%;
  }

  .right-2 {
    right: calc(var(--core-spacing-size-04) * 2);
  }

  .left-4 {
    left: calc(var(--core-spacing-size-04) * 4);
  }

  .z-10 {
    z-index: 10;
  }

  .z-50 {
    z-index: 50;
  }

  .col-start-2 {
    grid-column-start: 2;
  }

  .row-span-2 {
    grid-row: span 2 / span 2;
  }

  .row-start-1 {
    grid-row-start: 1;
  }

  .-mx-1 {
    margin-inline: calc(var(--core-spacing-size-04) * -1);
  }

  .mx-auto {
    margin-inline: auto;
  }

  .my-1 {
    margin-block: calc(var(--core-spacing-size-04) * 1);
  }

  .mt-0\.5 {
    margin-top: calc(var(--core-spacing-size-04) * .5);
  }

  .mt-3 {
    margin-top: calc(var(--core-spacing-size-04) * 3);
  }

  .mt-4 {
    margin-top: calc(var(--core-spacing-size-04) * 4);
  }

  .mb-1 {
    margin-bottom: calc(var(--core-spacing-size-04) * 1);
  }

  .mb-2 {
    margin-bottom: calc(var(--core-spacing-size-04) * 2);
  }

  .mb-3 {
    margin-bottom: calc(var(--core-spacing-size-04) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--core-spacing-size-04) * 4);
  }

  .mb-8 {
    margin-bottom: calc(var(--core-spacing-size-04) * 8);
  }

  .ml-auto {
    margin-left: auto;
  }

  .line-clamp-1 {
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .inline-flex {
    display: inline-flex;
  }

  .size-3\.5 {
    width: calc(var(--core-spacing-size-04) * 3.5);
    height: calc(var(--core-spacing-size-04) * 3.5);
  }

  .size-4 {
    width: calc(var(--core-spacing-size-04) * 4);
    height: calc(var(--core-spacing-size-04) * 4);
  }

  .size-9 {
    width: calc(var(--core-spacing-size-04) * 9);
    height: calc(var(--core-spacing-size-04) * 9);
  }

  .size-full {
    width: 100%;
    height: 100%;
  }

  .h-1 {
    height: calc(var(--core-spacing-size-04) * 1);
  }

  .h-2 {
    height: calc(var(--core-spacing-size-04) * 2);
  }

  .h-2\.5 {
    height: calc(var(--core-spacing-size-04) * 2.5);
  }

  .h-3 {
    height: calc(var(--core-spacing-size-04) * 3);
  }

  .h-4 {
    height: calc(var(--core-spacing-size-04) * 4);
  }

  .h-5 {
    height: calc(var(--core-spacing-size-04) * 5);
  }

  .h-8 {
    height: calc(var(--core-spacing-size-04) * 8);
  }

  .h-9 {
    height: calc(var(--core-spacing-size-04) * 9);
  }

  .h-10 {
    height: calc(var(--core-spacing-size-04) * 10);
  }

  .h-12 {
    height: calc(var(--core-spacing-size-04) * 12);
  }

  .h-32 {
    height: calc(var(--core-spacing-size-04) * 32);
  }

  .h-\[var\(--radix-select-trigger-height\)\] {
    height: var(--radix-select-trigger-height);
  }

  .h-full {
    height: 100%;
  }

  .h-px {
    height: 1px;
  }

  .h-screen {
    height: 100vh;
  }

  .max-h-\(--radix-select-content-available-height\) {
    max-height: var(--radix-select-content-available-height);
  }

  .min-h-0 {
    min-height: calc(var(--core-spacing-size-04) * 0);
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-1\/2 {
    width: 50%;
  }

  .w-2 {
    width: calc(var(--core-spacing-size-04) * 2);
  }

  .w-2\.5 {
    width: calc(var(--core-spacing-size-04) * 2.5);
  }

  .w-3 {
    width: calc(var(--core-spacing-size-04) * 3);
  }

  .w-4 {
    width: calc(var(--core-spacing-size-04) * 4);
  }

  .w-5 {
    width: calc(var(--core-spacing-size-04) * 5);
  }

  .w-8 {
    width: calc(var(--core-spacing-size-04) * 8);
  }

  .w-12 {
    width: calc(var(--core-spacing-size-04) * 12);
  }

  .w-32 {
    width: calc(var(--core-spacing-size-04) * 32);
  }

  .w-fit {
    width: fit-content;
  }

  .w-full {
    width: 100%;
  }

  .max-w-2xl {
    max-width: var(--container-2xl);
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .max-w-md {
    max-width: var(--container-md);
  }

  .min-w-0 {
    min-width: calc(var(--core-spacing-size-04) * 0);
  }

  .min-w-\[8rem\] {
    min-width: 8rem;
  }

  .min-w-\[var\(--radix-select-trigger-width\)\] {
    min-width: var(--radix-select-trigger-width);
  }

  .flex-1 {
    flex: 1;
  }

  .flex-shrink-0, .shrink-0 {
    flex-shrink: 0;
  }

  .origin-\(--radix-select-content-transform-origin\) {
    transform-origin: var(--radix-select-content-transform-origin);
  }

  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }

  .animate-bounce {
    animation: var(--animate-bounce);
  }

  .animate-spin {
    animation: var(--animate-spin);
  }

  .cursor-default {
    cursor: default;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .touch-none {
    touch-action: none;
  }

  .scroll-my-1 {
    scroll-margin-block: calc(var(--core-spacing-size-04) * 1);
  }

  .auto-rows-min {
    grid-auto-rows: min-content;
  }

  .grid-rows-\[auto_auto\] {
    grid-template-rows: auto auto;
  }

  .flex-col {
    flex-direction: column;
  }

  .items-center {
    align-items: center;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .gap-1 {
    gap: calc(var(--core-spacing-size-04) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--core-spacing-size-04) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--core-spacing-size-04) * 2);
  }

  .gap-3 {
    gap: calc(var(--core-spacing-size-04) * 3);
  }

  .gap-4 {
    gap: calc(var(--core-spacing-size-04) * 4);
  }

  .gap-6 {
    gap: calc(var(--core-spacing-size-04) * 6);
  }

  :where(.space-y-1 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--core-spacing-size-04) * 1) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--core-spacing-size-04) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--core-spacing-size-04) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--core-spacing-size-04) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  .self-start {
    align-self: flex-start;
  }

  .justify-self-end {
    justify-self: flex-end;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-x-hidden {
    overflow-x: hidden;
  }

  .overflow-y-auto {
    overflow-y: auto;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-\[inherit\] {
    border-radius: inherit;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--semantic-shape-radius-large);
  }

  .rounded-md {
    border-radius: var(--semantic-shape-radius-medium);
  }

  .rounded-sm {
    border-radius: var(--semantic-shape-radius-small);
  }

  .rounded-xl {
    border-radius: var(--semantic-shape-radius-extra-large);
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }

  .border-l-2 {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
  }

  .border-border {
    border-color: var(--semantic-color-border-primary);
  }

  .border-border\/50 {
    border-color: var(--semantic-color-border-primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-border\/50 {
      border-color: color-mix(in oklab, var(--semantic-color-border-primary) 50%, transparent);
    }
  }

  .border-input {
    border-color: var(--semantic-color-border-subtle);
  }

  .border-primary {
    border-color: var(--semantic-color-background-brand);
  }

  .border-transparent {
    border-color: #0000;
  }

  .border-yellow-400 {
    border-color: var(--color-yellow-400);
  }

  .border-t-transparent {
    border-top-color: #0000;
  }

  .border-l-transparent {
    border-left-color: #0000;
  }

  .bg-accent {
    background-color: var(--semantic-color-background-accent);
  }

  .bg-accent-foreground {
    background-color: var(--semantic-color-foreground-on-color);
  }

  .bg-background {
    background-color: var(--semantic-color-background-primary);
  }

  .bg-background\/80 {
    background-color: var(--semantic-color-background-primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-background\/80 {
      background-color: color-mix(in oklab, var(--semantic-color-background-primary) 80%, transparent);
    }
  }

  .bg-background\/95 {
    background-color: var(--semantic-color-background-primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-background\/95 {
      background-color: color-mix(in oklab, var(--semantic-color-background-primary) 95%, transparent);
    }
  }

  .bg-border {
    background-color: var(--semantic-color-border-primary);
  }

  .bg-card {
    background-color: var(--semantic-color-background-elevated);
  }

  .bg-destructive {
    background-color: var(--semantic-color-background-danger-strong);
  }

  .bg-input-background {
    background-color: var(--semantic-color-background-elevated);
  }

  .bg-muted {
    background-color: var(--semantic-color-background-secondary);
  }

  .bg-muted-foreground {
    background-color: var(--semantic-color-foreground-secondary);
  }

  .bg-muted\/30 {
    background-color: var(--semantic-color-background-secondary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-muted\/30 {
      background-color: color-mix(in oklab, var(--semantic-color-background-secondary) 30%, transparent);
    }
  }

  .bg-popover {
    background-color: var(--semantic-color-background-primary);
  }

  .bg-primary {
    background-color: var(--semantic-color-background-brand);
  }

  .bg-primary\/20 {
    background-color: var(--semantic-color-background-brand);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-primary\/20 {
      background-color: color-mix(in oklab, var(--semantic-color-background-brand) 20%, transparent);
    }
  }

  .bg-secondary {
    background-color: var(--semantic-color-background-secondary);
  }

  .bg-yellow-50 {
    background-color: var(--color-yellow-50);
  }

  .p-1 {
    padding: calc(var(--core-spacing-size-04) * 1);
  }

  .p-3 {
    padding: calc(var(--core-spacing-size-04) * 3);
  }

  .p-4 {
    padding: calc(var(--core-spacing-size-04) * 4);
  }

  .p-6 {
    padding: calc(var(--core-spacing-size-04) * 6);
  }

  .p-8 {
    padding: calc(var(--core-spacing-size-04) * 8);
  }

  .p-px {
    padding: 1px;
  }

  .px-1 {
    padding-inline: calc(var(--core-spacing-size-04) * 1);
  }

  .px-2 {
    padding-inline: calc(var(--core-spacing-size-04) * 2);
  }

  .px-3 {
    padding-inline: calc(var(--core-spacing-size-04) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--core-spacing-size-04) * 4);
  }

  .px-6 {
    padding-inline: calc(var(--core-spacing-size-04) * 6);
  }

  .py-0\.5 {
    padding-block: calc(var(--core-spacing-size-04) * .5);
  }

  .py-1 {
    padding-block: calc(var(--core-spacing-size-04) * 1);
  }

  .py-1\.5 {
    padding-block: calc(var(--core-spacing-size-04) * 1.5);
  }

  .py-2 {
    padding-block: calc(var(--core-spacing-size-04) * 2);
  }

  .py-6 {
    padding-block: calc(var(--core-spacing-size-04) * 6);
  }

  .pt-2 {
    padding-top: calc(var(--core-spacing-size-04) * 2);
  }

  .pt-3 {
    padding-top: calc(var(--core-spacing-size-04) * 3);
  }

  .pt-6 {
    padding-top: calc(var(--core-spacing-size-04) * 6);
  }

  .pr-8 {
    padding-right: calc(var(--core-spacing-size-04) * 8);
  }

  .pr-20 {
    padding-right: calc(var(--core-spacing-size-04) * 20);
  }

  .pb-3 {
    padding-bottom: calc(var(--core-spacing-size-04) * 3);
  }

  .pb-6 {
    padding-bottom: calc(var(--core-spacing-size-04) * 6);
  }

  .pl-2 {
    padding-left: calc(var(--core-spacing-size-04) * 2);
  }

  .pl-12 {
    padding-left: calc(var(--core-spacing-size-04) * 12);
  }

  .text-center {
    text-align: center;
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }

  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .text-accent-foreground {
    color: var(--semantic-color-foreground-on-color);
  }

  .text-card-foreground {
    color: var(--semantic-color-foreground-primary);
  }

  .text-foreground {
    color: var(--semantic-color-foreground-primary);
  }

  .text-green-600 {
    color: var(--color-green-600);
  }

  .text-muted-foreground {
    color: var(--semantic-color-foreground-secondary);
  }

  .text-muted-foreground\/40 {
    color: var(--semantic-color-foreground-secondary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-muted-foreground\/40 {
      color: color-mix(in oklab, var(--semantic-color-foreground-secondary) 40%, transparent);
    }
  }

  .text-orange-600 {
    color: var(--core-color-palette-orange-600);
  }

  .text-popover-foreground {
    color: var(--semantic-color-foreground-primary);
  }

  .text-primary {
    color: var(--semantic-color-background-brand);
  }

  .text-primary-foreground {
    color: var(--semantic-color-foreground-on-brand);
  }

  .text-secondary-foreground {
    color: var(--semantic-color-foreground-primary);
  }

  .text-white {
    color: var(--core-color-mode-white);
  }

  .text-yellow-600 {
    color: var(--core-color-palette-yellow-600);
  }

  .underline-offset-4 {
    text-underline-offset: 4px;
  }

  .opacity-50 {
    opacity: .5;
  }

  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .outline-hidden {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[color\,box-shadow\] {
    transition-property: color, box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .delay-75 {
    transition-delay: 75ms;
  }

  .delay-150 {
    transition-delay: .15s;
  }

  .delay-75 {
    animation-delay: 75ms;
  }

  .delay-150 {
    animation-delay: .15s;
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }

  .selection\:bg-primary ::selection, .selection\:bg-primary::selection {
    background-color: var(--semantic-color-background-brand);
  }

  .selection\:text-primary-foreground ::selection, .selection\:text-primary-foreground::selection {
    color: var(--semantic-color-foreground-on-brand);
  }

  .file\:inline-flex::file-selector-button {
    display: inline-flex;
  }

  .file\:h-7::file-selector-button {
    height: calc(var(--core-spacing-size-04) * 7);
  }

  .file\:border-0::file-selector-button {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .file\:bg-transparent::file-selector-button {
    background-color: #0000;
  }

  .file\:text-sm::file-selector-button {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .file\:font-medium::file-selector-button {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .file\:text-foreground::file-selector-button {
    color: var(--foreground);
  }

  .placeholder\:text-muted-foreground::placeholder {
    color: var(--muted-foreground);
  }

  @media (hover: hover) {
    .hover\:border-border:hover {
      border-color: var(--border);
    }
  }

  @media (hover: hover) {
    .hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    .hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-secondary\/80:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-secondary\/80:hover {
        background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:underline:hover {
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .hover\:shadow-md:hover {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus\:bg-accent:focus {
    background-color: var(--accent);
  }

  .focus\:text-accent-foreground:focus {
    color: var(--accent-foreground);
  }

  .focus\:shadow-md:focus {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:border-ring:focus-visible {
    border-color: var(--semantic-focus-ring);
  }

  .focus-visible\:ring-\[3px\]:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-destructive\/20:focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-destructive\/20:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .focus-visible\:ring-ring\/50:focus-visible {
    --tw-ring-color: var(--semantic-focus-ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-ring\/50:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--semantic-focus-ring) 50%, transparent);
    }
  }

  .focus-visible\:outline-1:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:cursor-not-allowed:disabled {
    cursor: not-allowed;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has([data-slot="card-action"]) {
    grid-template-columns: 1fr auto;
  }

  .has-\[\>svg\]\:px-2\.5:has( > svg) {
    padding-inline: calc(var(--core-spacing-size-04) * 2.5);
  }

  .has-\[\>svg\]\:px-3:has( > svg) {
    padding-inline: calc(var(--core-spacing-size-04) * 3);
  }

  .has-\[\>svg\]\:px-4:has( > svg) {
    padding-inline: calc(var(--core-spacing-size-04) * 4);
  }

  .aria-invalid\:border-destructive[aria-invalid="true"] {
    border-color: var(--destructive);
  }

  .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .data-\[disabled\]\:pointer-events-none[data-disabled] {
    pointer-events: none;
  }

  .data-\[disabled\]\:opacity-50[data-disabled] {
    opacity: .5;
  }

  .data-\[placeholder\]\:text-muted-foreground[data-placeholder] {
    color: var(--muted-foreground);
  }

  .data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
    --tw-translate-y: calc(var(--core-spacing-size-04) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
    --tw-enter-translate-y: calc(2 * var(--core-spacing-size-04) * -1);
  }

  .data-\[side\=left\]\:-translate-x-1[data-side="left"] {
    --tw-translate-x: calc(var(--core-spacing-size-04) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
    --tw-enter-translate-x: calc(2 * var(--core-spacing-size-04));
  }

  .data-\[side\=right\]\:translate-x-1[data-side="right"] {
    --tw-translate-x: calc(var(--core-spacing-size-04) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
    --tw-enter-translate-x: calc(2 * var(--core-spacing-size-04) * -1);
  }

  .data-\[side\=top\]\:-translate-y-1[data-side="top"] {
    --tw-translate-y: calc(var(--core-spacing-size-04) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
    --tw-enter-translate-y: calc(2 * var(--core-spacing-size-04));
  }

  .data-\[size\=default\]\:h-9[data-size="default"] {
    height: calc(var(--core-spacing-size-04) * 9);
  }

  .data-\[size\=sm\]\:h-8[data-size="sm"] {
    height: calc(var(--core-spacing-size-04) * 8);
  }

  :is(.\*\:data-\[slot\=select-value\]\:line-clamp-1 > *)[data-slot="select-value"] {
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  :is(.\*\:data-\[slot\=select-value\]\:flex > *)[data-slot="select-value"] {
    display: flex;
  }

  :is(.\*\:data-\[slot\=select-value\]\:items-center > *)[data-slot="select-value"] {
    align-items: center;
  }

  :is(.\*\:data-\[slot\=select-value\]\:gap-2 > *)[data-slot="select-value"] {
    gap: calc(var(--core-spacing-size-04) * 2);
  }

  .data-\[state\=closed\]\:animate-out[data-state="closed"] {
    animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
    --tw-exit-opacity: 0;
  }

  .data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
    --tw-exit-scale: .95;
  }

  .data-\[state\=open\]\:animate-in[data-state="open"] {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=open\]\:fade-in-0[data-state="open"] {
    --tw-enter-opacity: 0;
  }

  .data-\[state\=open\]\:zoom-in-95[data-state="open"] {
    --tw-enter-scale: .95;
  }

  @media (width >= 48rem) {
    .md\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  .dark\:border-input:is(.dark *) {
    border-color: var(--input);
  }

  .dark\:bg-destructive\/60:is(.dark *) {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-destructive\/60:is(.dark *) {
      background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
    }
  }

  .dark\:bg-input\/30:is(.dark *) {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-input\/30:is(.dark *) {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  .dark\:bg-yellow-900\/20:is(.dark *) {
    background-color: color-mix(in srgb, oklch(.421 .095 57.708) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-yellow-900\/20:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-yellow-900) 20%, transparent);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-accent\/50:is(.dark *):hover {
      background-color: var(--accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-accent\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--accent) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-input\/50:is(.dark *):hover {
      background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-input\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--input) 50%, transparent);
      }
    }
  }

  .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
    width: calc(var(--core-spacing-size-04) * 4);
    height: calc(var(--core-spacing-size-04) * 4);
  }

  .\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground svg:not([class*="text-"]) {
    color: var(--muted-foreground);
  }

  .\[\.border-b\]\:pb-6.border-b {
    padding-bottom: calc(var(--core-spacing-size-04) * 6);
  }

  .\[\.border-t\]\:pt-6.border-t {
    padding-top: calc(var(--core-spacing-size-04) * 6);
  }

  :is(.\*\:\[span\]\:last\:flex > *):is(span):last-child {
    display: flex;
  }

  :is(.\*\:\[span\]\:last\:items-center > *):is(span):last-child {
    align-items: center;
  }

  :is(.\*\:\[span\]\:last\:gap-2 > *):is(span):last-child {
    gap: calc(var(--core-spacing-size-04) * 2);
  }

  .\[\&\:last-child\]\:pb-6:last-child {
    padding-bottom: calc(var(--core-spacing-size-04) * 6);
  }

  .\[\&\>svg\]\:pointer-events-none > svg {
    pointer-events: none;
  }

  .\[\&\>svg\]\:size-3 > svg {
    width: calc(var(--core-spacing-size-04) * 3);
    height: calc(var(--core-spacing-size-04) * 3);
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-secondary\/90:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-secondary\/90:hover {
        background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }
}

:root {
  --font-size: 16px;
  --semantic-color-background-primary: var(--core-color-mode-light);
  --semantic-color-foreground-primary: var(--core-color-mode-dark);
  --semantic-color-background-elevated: var(--core-color-mode-white);
  --semantic-color-foreground-on-brand: var(--core-color-mode-white);
  --semantic-color-background-brand: var(--core-color-palette-brand-primary-500);
  --semantic-color-background-secondary: var(--core-color-palette-neutral-100);
  --semantic-color-foreground-secondary: var(--core-color-palette-neutral-600);
  --semantic-color-foreground-tertiary: var(--core-color-palette-neutral-500);
  --semantic-color-background-accent: var(--core-color-palette-neutral-100);
  --semantic-color-foreground-on-color: var(--semantic-color-foreground-primary);
  --semantic-color-background-danger-strong: var(--core-color-palette-red-600);
  --semantic-color-foreground-on-danger-subtle: var(--core-color-palette-red-700);
  --semantic-color-border-primary: var(--core-color-palette-neutral-400);
  --semantic-color-background-placeholder: var(--core-color-palette-neutral-100);
  --semantic-typography-font-weight-medium: var(--core-typography-weight-medium);
  --semantic-typography-font-weight-regular: var(--core-typography-weight-regular);
  --chart-1: var(--core-color-datavis-categorical-1);
  --chart-2: var(--core-color-datavis-categorical-2);
  --chart-3: var(--core-color-datavis-categorical-3);
  --chart-4: var(--core-color-datavis-categorical-4);
  --chart-5: var(--core-color-datavis-categorical-5);
  --semantic-shape-radius-medium: var(--core-shape-radius-medium);
  --animate-bounce: bounce 1s infinite;
  --animate-spin: spin 1s linear infinite;
  --default-transition-timing-function: var(--core-motion-easing-standard);
  --default-transition-duration: var(--core-motion-duration-short);
}

.dark {
  --semantic-color-background-primary: var(--core-color-mode-dark);
  --semantic-color-foreground-primary: var(--core-color-mode-light);
  --semantic-color-background-elevated: var(--core-color-mode-dark);
  --semantic-color-foreground-on-brand: var(--core-color-mode-light);
  --semantic-color-background-brand: var(--core-color-mode-light);
  --semantic-color-foreground-on-brand: var(--core-color-mode-dark);
  --semantic-color-background-secondary: var(--core-color-palette-neutral-800);
  --semantic-color-foreground-secondary: var(--core-color-palette-neutral-300);
  --semantic-color-foreground-tertiary: var(--core-color-palette-neutral-500);
  --semantic-color-background-accent: var(--core-color-palette-neutral-800);
  --semantic-color-foreground-on-color: var(--semantic-color-foreground-primary);
  --semantic-color-background-danger-strong: oklch(.396 .141 25.723);
  --semantic-color-foreground-on-danger-subtle: var(--core-color-palette-red-200);
  --semantic-color-border-primary: var(--core-color-palette-neutral-600);
  --semantic-color-background-placeholder: var(--core-color-palette-neutral-800);
  --semantic-typography-font-weight-medium: var(--core-typography-weight-medium);
  --semantic-typography-font-weight-regular: var(--core-typography-weight-regular);
  --chart-1: oklch(.488 .243 264.376);
  --chart-2: oklch(.696 .17 162.48);
  --chart-3: oklch(.769 .188 70.08);
  --chart-4: oklch(.627 .265 303.9);
  --chart-5: oklch(.645 .246 16.439);
  --semantic-shape-radius-medium: var(--core-shape-radius-medium);
  --animate-bounce: bounce 1s infinite;
  --animate-spin: spin 1s linear infinite;
  --default-transition-timing-function: var(--core-motion-easing-standard);
  --default-transition-duration: var(--core-motion-duration-short);
}

html {
  font-size: var(--font-size);
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes bounce {
  0%, 100% {
    animation-timing-function: cubic-bezier(.8, 0, 1, 1);
    transform: translateY(-25%);
  }

  50% {
    animation-timing-function: cubic-bezier(0, 0, .2, 1);
    transform: none;
  }
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
